@page "/orders"
@inject HttpClient Http
@using VeryBigShoesCompany.Shared

<h3>OrdersView</h3>

<FileUpload OnUploadComplete="UploadCompleteHandlerAsync"></FileUpload>

@if (isLoaded)
{
    @if (orders.Count == 0)
    {
        <span>No data available. Please upload a file first</span>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Customer Name</th>
                    <th>Customer Email</th>
                    <th>Quantity</th>
                    <th>Notes</th>
                    <th>Size</th>
                    <th>Date Required</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in orders)
                {
                    <tr>
                        <td>@order.CustomerName</td>
                        <td>@order.CustomerEmail</td>
                        <td>@order.Quantity</td>
                        <td>@order.Notes</td>
                        <td>@order.Size</td>
                        <td>@order.DateRequired.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
else
{
    <div>Loading screen...</div>
}


@code {
    private bool isLoaded = false;
    private List<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        await ReloadDataAsync();
    }

    async Task UploadCompleteHandlerAsync()
    {
        await ReloadDataAsync();
    }

    private async Task ReloadDataAsync()
    {
        orders = await Http.GetFromJsonAsync<List<Order>>("/api/orders");

        isLoaded = true;
    }
}